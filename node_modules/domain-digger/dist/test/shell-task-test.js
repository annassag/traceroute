"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var shell_task_1 = require('../classes/tasks/shell-task');
var CustomShellTask = (function (_super) {
    __extends(CustomShellTask, _super);
    function CustomShellTask() {
        _super.apply(this, arguments);
    }
    CustomShellTask.prototype.getExecutableName = function () {
        return 'ls';
    };
    CustomShellTask.prototype.getParameters = function () {
        return ['-lh', './'];
    };
    return CustomShellTask;
}(shell_task_1.default));
var FailedCustomShellTask = (function (_super) {
    __extends(FailedCustomShellTask, _super);
    function FailedCustomShellTask() {
        _super.apply(this, arguments);
    }
    FailedCustomShellTask.prototype.getExecutableName = function () {
        return 'ls';
    };
    FailedCustomShellTask.prototype.getParameters = function () {
        return ['randomstring'];
    };
    return FailedCustomShellTask;
}(shell_task_1.default));
function sucess(test) {
    var task = new CustomShellTask;
    task.run()
        .then(function (data) {
        test.ok(data.length);
        test.done();
    })
        .catch(function (err) {
        test.ok(false, err.message);
        test.done();
    });
}
exports.sucess = sucess;
function fail(test) {
    var task = new FailedCustomShellTask;
    task.run()
        .then(function (data) {
        test.ok(!data.length);
        test.done();
    })
        .catch(function (err) {
        test.ok(err.message.length);
        test.done();
    });
}
exports.fail = fail;
